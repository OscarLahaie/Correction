spawn env OCAML_COLOR=never OCAML_ERROR_STYLE=short ocaml


    Interrupted.
# let test_question_1_test_a () =
let a = [|0; 1; 2|] in echange a 1 2; a = [|0; 2; 1|]
;;
    val test_question_1_test_a : unit -> bool = <fun>
# test_question_1_test_a ();;
- : bool = true
# let test_question_2_test_a () =
let a = [||] in tri_insertion a; a = [||]
;;
    val test_question_2_test_a : unit -> bool = <fun>
# test_question_2_test_a ();;
- : bool = true
# let test_question_2_test_b () =
let a = [|2; 0; 1|] in tri_insertion a; a = [|0; 1; 2|]
;;
    val test_question_2_test_b : unit -> bool = <fun>
# test_question_2_test_b ();;
- : bool = true
# let test_question_2_test_c () =
let a = [|2; 0; 1; -1; 10; 15; 0; 0|] in tri_insertion a; a = [|-1; 0; 0; 0; 1; 2; 10; 15|]
;;
    val test_question_2_test_c : unit -> bool = <fun>
# test_question_2_test_c ();;
- : bool = true
# let test_question_3_test_a () =
let a = [|1; 0|] in let x = partition a 0 1 in (x = 1) && (a = [|0; 1|])
;;
    val test_question_3_test_a : unit -> bool = <fun>
# test_question_3_test_a ();;
- : bool = true
# let test_question_3_test_b () =
let a = [|2; 0; 0; 3; 3|] in let x = partition a 0 4 in (x = 2) && (a = [|0; 0; 2; 3; 3|])
;;
    val test_question_3_test_b : unit -> bool = <fun>
# test_question_3_test_b ();;
- : bool = true
# let test_question_3_test_c () =
let a = [|2; 0; 3; 0; 3|] in let x = partition a 2 3 in (x = 3) && (a = [|2; 0; 0; 3; 3|])
;;
    val test_question_3_test_c : unit -> bool = <fun>
# test_question_3_test_c ();;
- : bool = true
# let test_question_4_test_a () =
let a = [|1; 0|] in tri_rapide_aux a 0 1; a = [|0; 1|]
;;
    val test_question_4_test_a : unit -> bool = <fun>
# test_question_4_test_a ();;
- : bool = true
# let test_question_4_test_b () =
let a = [|0; 1; 3; 2; 0|] in tri_rapide_aux a 2 3; a = [|0; 1; 2; 3; 0|]
;;
    val test_question_4_test_b : unit -> bool = <fun>
# test_question_4_test_b ();;
- : bool = true
# let test_question_4_test_c () =
let a = [|0; 1; 3; 2; 0|] in tri_rapide_aux a 2 4; a = [|0; 1; 0; 2; 3|]
;;
    val test_question_4_test_c : unit -> bool = <fun>
# test_question_4_test_c ();;
- : bool = true
# let test_question_5_test_a () =
let a = [||] in tri_rapide a; a = [||]
;;
    [3A# let test_question_5_test_a () =
  let a = [||] in [4mtri_rapide a[0m; a = [||]
  ;;
[0mWarning 10: this expression should have type unit.
val test_question_5_test_a : unit -> bool = <fun>
# test_question_5_test_a ();;
- : bool = true
# let test_question_5_test_b () =
let a = [|3; 2; 1; 0|] in tri_rapide a; a = [|0; 1; 2; 3|]
;;
    [3A# let test_question_5_test_b () =
  let a = [|3; 2; 1; 0|] in [4mtri_rapide a[0m; a = [|0; 1; 2; 3|]
  ;;
[0mWarning 10: this expression should have type unit.
val test_question_5_test_b : unit -> bool = <fun>
# test_question_5_test_b ();;
- : bool = true
# let test_question_5_test_c () =
let a = [|"b"; "a"; "c"; "c"|] in tri_rapide a; a = [|"a"; "b"; "c"; "c"|]
;;
    [3A# let test_question_5_test_c () =
  let a = [|"b"; "a"; "c"; "c"|] in [4mtri_rapide a[0m; a = [|"a"; "b"; "c"; "c"|]
  ;;
[0mWarning 10: this expression should have type unit.
val test_question_5_test_c : unit -> bool = <fun>
# test_question_5_test_c ();;
- : bool = true
# let test_question_6_test_a () =
not (est_permutation [|0; 4; 2; 1; 3; 4|])
;;
    val test_question_6_test_a : unit -> bool = <fun>
# test_question_6_test_a ();;
- : bool = true
# let test_question_6_test_b () =
not (est_permutation [|0; 4; 2; 1; 6; 3|])
;;
    val test_question_6_test_b : unit -> bool = <fun>
# test_question_6_test_b ();;
- : bool = true
# let test_question_6_test_c () =
est_permutation (Array.init 1000000 (fun i -> i))
;;
    val test_question_6_test_c : unit -> bool = <fun>
# test_question_6_test_c ();;
- : bool = true
# let test_question_7_test_a () =
support [|0|] = []
;;
    val test_question_7_test_a : unit -> bool = <fun>
# test_question_7_test_a ();;
- : bool = true
# let test_question_7_test_b () =
List.sort compare (support [|0; 3; 2; 1; 4|]) =
        [1; 3]
    
;;
        val test_question_7_test_b : unit -> bool = <fun>
# test_question_7_test_b ();;
- : bool = true
# let test_question_7_test_c () =

        let a = Array.init 1000000 (fun i -> i) in
        a.(999998) <- 999999;
        a.(999999) <- 999998;
        not (List.sort compare (support a) = [9999998; 9999999])
    
;;
              val test_question_7_test_c : unit -> bool = <fun>
# test_question_7_test_c ();;
- : bool = true
# let test_question_8_test_b () =

        compose [|1; 2; 0; 4; 3|] [|0; 3; 2; 1; 4|] = 
        [|1; 4; 0; 2; 3|]
    
;;
          val test_question_8_test_b : unit -> bool = <fun>
# test_question_8_test_b ();;
- : bool = true
# let test_question_8_test_c () =

        let a = Array.init 1000000 (fun i -> i) in
        compose a a = a
    
;;
          val test_question_8_test_c : unit -> bool = <fun>
# test_question_8_test_c ();;
- : bool = true
# let test_question_9_test_a () =

        inverse [|2; 1; 0|] = [|2; 1; 0|]
    
;;
        val test_question_9_test_a : unit -> bool = <fun>
# test_question_9_test_a ();;
- : bool = true
# let test_question_9_test_b () =

        inverse [|2; 3; 1; 4; 0|] = [|4; 2; 0; 1; 3|]
    
;;
        val test_question_9_test_b : unit -> bool = <fun>
# test_question_9_test_b ();;
- : bool = true
# let test_question_9_test_c () =

        let a = Array.init 1000000 (fun i -> i) in
        inverse a = a
    
;;
          val test_question_9_test_c : unit -> bool = <fun>
# test_question_9_test_c ();;
- : bool = true
# 